{"ast":null,"code":"var _jsxFileName = \"/Users/eirvairdre/WebstormProjects/aviahack/src/screens/MainPage.js\",\n  _s = $RefreshSig$();\nimport '../components/CommonStyle.css';\nimport * as React from 'react';\n// import { Card, Icon } from 'semantic-ui-react'\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Avatar, Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nfunction MainPage() {\n  _s();\n  const [progressArr, setProgressArr] = React.useState(0);\n  const [progressLoad, setProgressLoad] = React.useState(0);\n  const [progressWay, setProgressWay] = React.useState(0);\n  const [progressFinal, setProgressFinal] = React.useState(0);\n  const Drivers = [{\n    name: 'Alex'\n  }, {\n    name: 'Dmitry'\n  }, {\n    name: 'Georgy'\n  }, {\n    name: 'Leo'\n  }, {\n    name: 'David'\n  }, {\n    name: 'Alexey'\n  }];\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgressArr(oldProgress => {\n        if (oldProgress === 100) {\n          return 100;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  React.useEffect(() => {\n    if (progressArr === 100) {\n      const timer = setInterval(() => {\n        setProgressLoad(oldProgress => {\n          if (oldProgress === 100) {\n            return 100;\n          }\n          const diff = Math.random() * 10;\n          return Math.min(oldProgress + diff, 100);\n        });\n      }, 500);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressArr]);\n  React.useEffect(() => {\n    if (progressLoad === 100) {\n      const timer = setInterval(() => {\n        setProgressWay(oldProgress => {\n          if (oldProgress === 100) {\n            return 100;\n          }\n          const diff = Math.random() * 10;\n          return Math.min(oldProgress + diff, 100);\n        });\n      }, 500);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressLoad]);\n  React.useEffect(() => {\n    if (progressWay === 100) {\n      const timer = setInterval(() => {\n        setProgressFinal(prevProgress => prevProgress >= 100 ? 100 : prevProgress + 1);\n      }, 800);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressWay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '20%'\n      },\n      actions: [/*#__PURE__*/_jsxDEV(Box, {\n        className: 'Row',\n        sx: {\n          width: '100%',\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressArr,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%',\n            marginRight: 10\n          },\n          variant: \"determinate\",\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressLoad,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%',\n            marginRight: 10\n          },\n          variant: 'determinate',\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressWay,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%',\n            marginRight: 10\n          },\n          variant: 'determinate',\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressFinal,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%'\n          },\n          variant: 'determinate',\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Meta\n      // avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\n      , {\n        title: \"Card title\",\n        description: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(MainPage, \"v8a9OTcWbCVX5l3FYqFtaBLuRLU=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","LinearProgress","Box","EditOutlined","EllipsisOutlined","SettingOutlined","Avatar","Card","Meta","MainPage","progressArr","setProgressArr","useState","progressLoad","setProgressLoad","progressWay","setProgressWay","progressFinal","setProgressFinal","Drivers","name","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","prevProgress","width","flex","backgroundColor","borderRadius","marginRight"],"sources":["/Users/eirvairdre/WebstormProjects/aviahack/src/screens/MainPage.js"],"sourcesContent":["import '../components/CommonStyle.css';\nimport * as React from 'react';\n// import { Card, Icon } from 'semantic-ui-react'\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Avatar, Card } from 'antd';\n\nconst { Meta } = Card;\n\nfunction MainPage() {\n    const [progressArr, setProgressArr] = React.useState(0);\n    const [progressLoad, setProgressLoad] = React.useState(0);\n    const [progressWay, setProgressWay] = React.useState(0);\n    const [progressFinal, setProgressFinal] = React.useState(0);\n\n    const Drivers = [\n        {\n            name: 'Alex',\n        },\n        {\n            name: 'Dmitry',\n        },\n        {\n            name: 'Georgy',\n        },\n        {\n            name: 'Leo',\n        },\n        {\n            name: 'David',\n        },\n        {\n            name: 'Alexey',\n        }\n    ]\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgressArr((oldProgress) => {\n                if (oldProgress === 100) {\n                    return 100;\n                }\n                const diff = Math.random() * 10;\n                return Math.min(oldProgress + diff, 100);\n            });\n        }, 500);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (progressArr === 100) {\n            const timer = setInterval(() => {\n                setProgressLoad((oldProgress) => {\n                    if (oldProgress === 100) {\n                        return 100;\n                    }\n                    const diff = Math.random() * 10;\n                    return Math.min(oldProgress + diff, 100);\n                });\n            }, 500);\n\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressArr]);\n\n    React.useEffect(() => {\n        if (progressLoad === 100) {\n            const timer = setInterval(() => {\n                setProgressWay((oldProgress) => {\n                    if (oldProgress === 100) {\n                        return 100;\n                    }\n                    const diff = Math.random() * 10;\n                    return Math.min(oldProgress + diff, 100);\n                });\n            }, 500);\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressLoad]);\n\n    React.useEffect(() => {\n        if (progressWay === 100) {\n            const timer = setInterval(() => {\n                setProgressFinal((prevProgress) => (prevProgress >= 100 ? 100 : prevProgress + 1));\n            }, 800);\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressWay]);\n\n    return(\n        <div className=\"MainPage\">\n\n            <Card\n                style={{\n                    width: '20%',\n                }}\n                actions={[\n                    <Box className={'Row'} sx={{ width: '100%', flex: 1 }}>\n                        <LinearProgress\n                            value={progressArr}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%', marginRight: 10}}\n                            variant={\"determinate\"}\n                            color=\"success\"\n                        />\n                        <LinearProgress\n                            value={progressLoad}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%', marginRight: 10}}\n                            variant={'determinate'}\n                            color=\"success\"\n                        />\n                        <LinearProgress\n                            value={progressWay}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%', marginRight: 10}}\n                            variant={'determinate'}\n                            color=\"success\"\n                        />\n                        <LinearProgress\n                            value={progressFinal}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%'}}\n                            variant={'determinate'}\n                            color=\"success\"\n                        />\n                    </Box>\n                ]}\n            >\n                <Meta\n                    // avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\n                    title=\"Card title\"\n                    description={''}\n                />\n            </Card>\n      </div>\n    );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}