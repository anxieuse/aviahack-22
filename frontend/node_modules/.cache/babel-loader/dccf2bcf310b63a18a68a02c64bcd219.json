{"ast":null,"code":"var _jsxFileName = \"/Users/eirvairdre/WebstormProjects/aviahack/src/screens/MainPage.js\",\n  _s = $RefreshSig$();\nimport '../components/CommonStyle.css';\nimport * as React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\n\n// function LinearProgressWithLabel(props) {\n//     return (\n//         <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//             <Box sx={{ width: '100%', mr: 1 }}>\n//                 <LinearProgress variant=\"determinate\" {...props} />\n//             </Box>\n//         </Box>\n//     );\n// }\n//\n// LinearProgressWithLabel.propTypes = {\n//     /**\n//      * The value of the progress indicator for the determinate and buffer variants.\n//      * Value between 0 and 100.\n//      */\n//     value: PropTypes.number.isRequired,\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [progressArr, setProgressArr] = React.useState(0);\n  const [progressLoad, setProgressLoad] = React.useState(0);\n  const [progressWay, setProgressWay] = React.useState(0);\n  const [progressFinal, setProgressFinal] = React.useState(0);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgressArr(oldProgress => {\n        if (oldProgress === 100) {\n          return 100;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  React.useEffect(() => {\n    if (progressArr === 100) {\n      const timer = setInterval(() => {\n        setProgressLoad(oldProgress => {\n          if (oldProgress === 100) {\n            return 100;\n          }\n          const diff = Math.random() * 10;\n          return Math.min(oldProgress + diff, 100);\n        });\n      }, 500);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressArr]);\n  React.useEffect(() => {\n    if (progressLoad === 100) {\n      const timer = setInterval(() => {\n        setProgressWay(oldProgress => {\n          if (oldProgress === 100) {\n            return 100;\n          }\n          const diff = Math.random() * 10;\n          return Math.min(oldProgress + diff, 100);\n        });\n      }, 500);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressLoad]);\n  React.useEffect(() => {\n    if (progressWay === 100) {\n      const timer = setInterval(() => {\n        setProgressFinal(prevProgress => prevProgress >= 100 ? 100 : prevProgress + 1);\n      }, 800);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressWay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        header: \"About Amy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        description: 'description'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: 'Row',\n        sx: {\n          width: '100%',\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressArr,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%',\n            marginRight: 10\n          },\n          variant: \"determinate\",\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressLoad,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%',\n            marginRight: 10\n          },\n          variant: 'determinate',\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressWay,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%',\n            marginRight: 10\n          },\n          variant: 'determinate',\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          value: progressFinal,\n          style: {\n            backgroundColor: '#f8f8f8',\n            borderRadius: 100,\n            width: '25%'\n          },\n          variant: 'determinate',\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(MainPage, \"v8a9OTcWbCVX5l3FYqFtaBLuRLU=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","Card","Icon","LinearProgress","Box","MainPage","progressArr","setProgressArr","useState","progressLoad","setProgressLoad","progressWay","setProgressWay","progressFinal","setProgressFinal","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","prevProgress","width","flex","backgroundColor","borderRadius","marginRight"],"sources":["/Users/eirvairdre/WebstormProjects/aviahack/src/screens/MainPage.js"],"sourcesContent":["import '../components/CommonStyle.css';\nimport * as React from 'react';\nimport { Card, Icon } from 'semantic-ui-react'\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\n\n// function LinearProgressWithLabel(props) {\n//     return (\n//         <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//             <Box sx={{ width: '100%', mr: 1 }}>\n//                 <LinearProgress variant=\"determinate\" {...props} />\n//             </Box>\n//         </Box>\n//     );\n// }\n//\n// LinearProgressWithLabel.propTypes = {\n//     /**\n//      * The value of the progress indicator for the determinate and buffer variants.\n//      * Value between 0 and 100.\n//      */\n//     value: PropTypes.number.isRequired,\n// };\n\nfunction MainPage() {\n    const [progressArr, setProgressArr] = React.useState(0);\n    const [progressLoad, setProgressLoad] = React.useState(0);\n    const [progressWay, setProgressWay] = React.useState(0);\n    const [progressFinal, setProgressFinal] = React.useState(0);\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgressArr((oldProgress) => {\n                if (oldProgress === 100) {\n                    return 100;\n                }\n                const diff = Math.random() * 10;\n                return Math.min(oldProgress + diff, 100);\n            });\n        }, 500);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (progressArr === 100) {\n            const timer = setInterval(() => {\n                setProgressLoad((oldProgress) => {\n                    if (oldProgress === 100) {\n                        return 100;\n                    }\n                    const diff = Math.random() * 10;\n                    return Math.min(oldProgress + diff, 100);\n                });\n            }, 500);\n\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressArr]);\n\n    React.useEffect(() => {\n        if (progressLoad === 100) {\n            const timer = setInterval(() => {\n                setProgressWay((oldProgress) => {\n                    if (oldProgress === 100) {\n                        return 100;\n                    }\n                    const diff = Math.random() * 10;\n                    return Math.min(oldProgress + diff, 100);\n                });\n            }, 500);\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressLoad]);\n\n    React.useEffect(() => {\n        if (progressWay === 100) {\n            const timer = setInterval(() => {\n                setProgressFinal((prevProgress) => (prevProgress >= 100 ? 100 : prevProgress + 1));\n            }, 800);\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressWay]);\n\n    return(\n        <div className=\"MainPage\">\n            <Card style={{ width: '18rem' }}>\n                <Card.Content header='About Amy' />\n                <Card.Content description={'description'} />\n                    <Box className={'Row'} sx={{ width: '100%', flex: 1 }}>\n                        {/*<Box>*/}\n                        <LinearProgress\n                            value={progressArr}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%', marginRight: 10}}\n                            variant={\"determinate\"}\n                            color=\"success\"\n                        />\n                        <LinearProgress\n                            value={progressLoad}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%', marginRight: 10}}\n                            variant={'determinate'}\n                            color=\"success\"\n                        />\n                        <LinearProgress\n                            value={progressWay}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%', marginRight: 10}}\n                            variant={'determinate'}\n                            color=\"success\"\n                        />\n                        <LinearProgress\n                            value={progressFinal}\n                            style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: '25%'}}\n                            variant={'determinate'}\n                            color=\"success\"\n                        />\n                    </Box>\n            </Card>\n      </div>\n    );\n}\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAO,+BAA+B;AACtC,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;AAC9C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,GAAG,MAAM,mBAAmB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGZ,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;EAE3DR,KAAK,CAACe,SAAS,CAAC,MAAM;IAClB,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BV,cAAc,CAAEW,WAAW,IAAK;QAC5B,IAAIA,WAAW,KAAK,GAAG,EAAE;UACrB,OAAO,GAAG;QACd;QACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE;QAC/B,OAAOD,IAAI,CAACE,GAAG,CAACJ,WAAW,GAAGC,IAAI,EAAE,GAAG,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACTI,aAAa,CAACP,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENhB,KAAK,CAACe,SAAS,CAAC,MAAM;IAClB,IAAIT,WAAW,KAAK,GAAG,EAAE;MACrB,MAAMU,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC5BP,eAAe,CAAEQ,WAAW,IAAK;UAC7B,IAAIA,WAAW,KAAK,GAAG,EAAE;YACrB,OAAO,GAAG;UACd;UACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE;UAC/B,OAAOD,IAAI,CAACE,GAAG,CAACJ,WAAW,GAAGC,IAAI,EAAE,GAAG,CAAC;QAC5C,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;MAEP,OAAO,MAAM;QACTI,aAAa,CAACP,KAAK,CAAC;MACxB,CAAC;IACL;EACJ,CAAC,EAAE,CAACV,WAAW,CAAC,CAAC;EAEjBN,KAAK,CAACe,SAAS,CAAC,MAAM;IAClB,IAAIN,YAAY,KAAK,GAAG,EAAE;MACtB,MAAMO,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC5BL,cAAc,CAAEM,WAAW,IAAK;UAC5B,IAAIA,WAAW,KAAK,GAAG,EAAE;YACrB,OAAO,GAAG;UACd;UACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE;UAC/B,OAAOD,IAAI,CAACE,GAAG,CAACJ,WAAW,GAAGC,IAAI,EAAE,GAAG,CAAC;QAC5C,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;MACP,OAAO,MAAM;QACTI,aAAa,CAACP,KAAK,CAAC;MACxB,CAAC;IACL;EACJ,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElBT,KAAK,CAACe,SAAS,CAAC,MAAM;IAClB,IAAIJ,WAAW,KAAK,GAAG,EAAE;MACrB,MAAMK,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC5BH,gBAAgB,CAAEU,YAAY,IAAMA,YAAY,IAAI,GAAG,GAAG,GAAG,GAAGA,YAAY,GAAG,CAAE,CAAC;MACtF,CAAC,EAAE,GAAG,CAAC;MACP,OAAO,MAAM;QACTD,aAAa,CAACP,KAAK,CAAC;MACxB,CAAC;IACL;EACJ,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,uBACrB,QAAC,IAAI;MAAC,KAAK,EAAE;QAAEc,KAAK,EAAE;MAAQ,CAAE;MAAA,wBAC5B,QAAC,IAAI,CAAC,OAAO;QAAC,MAAM,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACnC,QAAC,IAAI,CAAC,OAAO;QAAC,WAAW,EAAE;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eACxC,QAAC,GAAG;QAAC,SAAS,EAAE,KAAM;QAAC,EAAE,EAAE;UAAEA,KAAK,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAE,CAAE;QAAA,wBAElD,QAAC,cAAc;UACX,KAAK,EAAEpB,WAAY;UACnB,KAAK,EAAE;YAACqB,eAAe,EAAE,SAAS;YAAEC,YAAY,EAAE,GAAG;YAAEH,KAAK,EAAE,KAAK;YAAEI,WAAW,EAAE;UAAE,CAAE;UACtF,OAAO,EAAE,aAAc;UACvB,KAAK,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QACjB,eACF,QAAC,cAAc;UACX,KAAK,EAAEpB,YAAa;UACpB,KAAK,EAAE;YAACkB,eAAe,EAAE,SAAS;YAAEC,YAAY,EAAE,GAAG;YAAEH,KAAK,EAAE,KAAK;YAAEI,WAAW,EAAE;UAAE,CAAE;UACtF,OAAO,EAAE,aAAc;UACvB,KAAK,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QACjB,eACF,QAAC,cAAc;UACX,KAAK,EAAElB,WAAY;UACnB,KAAK,EAAE;YAACgB,eAAe,EAAE,SAAS;YAAEC,YAAY,EAAE,GAAG;YAAEH,KAAK,EAAE,KAAK;YAAEI,WAAW,EAAE;UAAE,CAAE;UACtF,OAAO,EAAE,aAAc;UACvB,KAAK,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QACjB,eACF,QAAC,cAAc;UACX,KAAK,EAAEhB,aAAc;UACrB,KAAK,EAAE;YAACc,eAAe,EAAE,SAAS;YAAEC,YAAY,EAAE,GAAG;YAAEH,KAAK,EAAE;UAAK,CAAE;UACrE,OAAO,EAAE,aAAc;UACvB,KAAK,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QACjB;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACP;AAEZ;AAAC,GAvGQpB,QAAQ;AAAA,KAARA,QAAQ;AAyGjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}