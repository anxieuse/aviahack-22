{"ast":null,"code":"var _jsxFileName = \"/Users/eirvairdre/WebstormProjects/aviahack/src/screens/MainPage.js\",\n  _s = $RefreshSig$();\nimport '../components/CommonStyle.css';\nimport * as React from 'react';\nimport FlatList from 'flatlist-react';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Avatar, Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nfunction MainPage() {\n  _s();\n  const [progressArr, setProgressArr] = React.useState(0);\n  const [progressLoad, setProgressLoad] = React.useState(0);\n  const [progressWay, setProgressWay] = React.useState(0);\n  const [progressFinal, setProgressFinal] = React.useState(0);\n  const Drivers = [{\n    name: 'Alex',\n    id: 1,\n    color: 'rgba(61, 188, 74, 0.17)'\n  }, {\n    name: 'Dmitry',\n    id: 2,\n    color: 'rgba(100, 100, 0, 0.5)'\n  }, {\n    name: 'Georgy',\n    id: 3,\n    color: 'rgba(253, 56, 56, 0.11)'\n  }, {\n    name: 'Leo',\n    id: 4,\n    color: 'rgba(61, 188, 74, 0.17)'\n  }, {\n    name: 'David',\n    id: 5,\n    color: 'rgba(253, 56, 56, 0.11)'\n  }, {\n    name: 'Alexey',\n    id: 6,\n    color: 'rgba(61, 188, 74, 0.17)'\n  }];\n  const Tasks = [{\n    name: 'David',\n    id: 1\n  }, {\n    name: 'David',\n    id: 2\n  }];\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgressArr(oldProgress => {\n        if (oldProgress === 100) {\n          return 100;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  React.useEffect(() => {\n    if (progressArr === 100) {\n      const timer = setInterval(() => {\n        setProgressLoad(oldProgress => {\n          if (oldProgress === 100) {\n            return 100;\n          }\n          const diff = Math.random() * 10;\n          return Math.min(oldProgress + diff, 100);\n        });\n      }, 500);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressArr]);\n  React.useEffect(() => {\n    if (progressLoad === 100) {\n      const timer = setInterval(() => {\n        setProgressWay(oldProgress => {\n          if (oldProgress === 100) {\n            return 100;\n          }\n          const diff = Math.random() * 10;\n          return Math.min(oldProgress + diff, 100);\n        });\n      }, 500);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressLoad]);\n  React.useEffect(() => {\n    if (progressWay === 100) {\n      const timer = setInterval(() => {\n        setProgressFinal(prevProgress => prevProgress >= 100 ? 100 : prevProgress + 1);\n      }, 800);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [progressWay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage\",\n    children: /*#__PURE__*/_jsxDEV(FlatList, {\n      list: Drivers,\n      displayGrid: true,\n      minColumnWidth: '300px',\n      rowGap: '10px',\n      gridGap: '40px',\n      renderItem: item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'Render',\n        style: {\n          backgroundColor: '#ffffff'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: 300,\n            backgroundColor: item.color\n          },\n          actions: [/*#__PURE__*/_jsxDEV(Box, {\n            className: 'Row',\n            sx: {\n              width: 240,\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              value: progressArr,\n              style: {\n                backgroundColor: '#f8f8f8',\n                borderRadius: 100,\n                width: 70,\n                marginRight: 10\n              },\n              variant: \"determinate\",\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              value: progressLoad,\n              style: {\n                backgroundColor: '#f8f8f8',\n                borderRadius: 100,\n                width: 70,\n                marginRight: 10\n              },\n              variant: 'determinate',\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              value: progressWay,\n              style: {\n                backgroundColor: '#f8f8f8',\n                borderRadius: 100,\n                width: 70,\n                marginRight: 10\n              },\n              variant: 'determinate',\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              value: progressFinal,\n              style: {\n                backgroundColor: '#f8f8f8',\n                borderRadius: 100,\n                width: 70\n              },\n              variant: 'determinate',\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 30\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(Meta, {\n            title: item.name,\n            description: /*#__PURE__*/_jsxDEV(FlatList, {\n              list: Tasks,\n              displayGrid: true,\n              renderItem: item => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'Task',\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  children: \"wvwr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n_s(MainPage, \"v8a9OTcWbCVX5l3FYqFtaBLuRLU=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","FlatList","LinearProgress","Box","EditOutlined","EllipsisOutlined","SettingOutlined","Avatar","Card","Meta","MainPage","progressArr","setProgressArr","useState","progressLoad","setProgressLoad","progressWay","setProgressWay","progressFinal","setProgressFinal","Drivers","name","id","color","Tasks","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","prevProgress","item","backgroundColor","width","flex","borderRadius","marginRight"],"sources":["/Users/eirvairdre/WebstormProjects/aviahack/src/screens/MainPage.js"],"sourcesContent":["import '../components/CommonStyle.css';\nimport * as React from 'react';\nimport FlatList from 'flatlist-react';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Avatar, Card } from 'antd';\n\nconst { Meta } = Card;\n\nfunction MainPage() {\n    const [progressArr, setProgressArr] = React.useState(0);\n    const [progressLoad, setProgressLoad] = React.useState(0);\n    const [progressWay, setProgressWay] = React.useState(0);\n    const [progressFinal, setProgressFinal] = React.useState(0);\n\n    const Drivers = [\n        {\n            name: 'Alex',\n            id: 1,\n            color: 'rgba(61, 188, 74, 0.17)'\n        },\n        {\n            name: 'Dmitry',\n            id: 2,\n            color: 'rgba(100, 100, 0, 0.5)'\n        },\n        {\n            name: 'Georgy',\n            id: 3,\n            color: 'rgba(253, 56, 56, 0.11)'\n        },\n        {\n            name: 'Leo',\n            id: 4,\n            color: 'rgba(61, 188, 74, 0.17)'\n        },\n        {\n            name: 'David',\n            id: 5,\n            color: 'rgba(253, 56, 56, 0.11)'\n        },\n        {\n            name: 'Alexey',\n            id: 6,\n            color: 'rgba(61, 188, 74, 0.17)'\n        }\n    ];\n\n    const Tasks = [\n        {\n            name: 'David',\n            id: 1,\n        },\n        {\n            name: 'David',\n            id: 2,\n        }\n    ]\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgressArr((oldProgress) => {\n                if (oldProgress === 100) {\n                    return 100;\n                }\n                const diff = Math.random() * 10;\n                return Math.min(oldProgress + diff, 100);\n            });\n        }, 500);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (progressArr === 100) {\n            const timer = setInterval(() => {\n                setProgressLoad((oldProgress) => {\n                    if (oldProgress === 100) {\n                        return 100;\n                    }\n                    const diff = Math.random() * 10;\n                    return Math.min(oldProgress + diff, 100);\n                });\n            }, 500);\n\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressArr]);\n\n    React.useEffect(() => {\n        if (progressLoad === 100) {\n            const timer = setInterval(() => {\n                setProgressWay((oldProgress) => {\n                    if (oldProgress === 100) {\n                        return 100;\n                    }\n                    const diff = Math.random() * 10;\n                    return Math.min(oldProgress + diff, 100);\n                });\n            }, 500);\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressLoad]);\n\n    React.useEffect(() => {\n        if (progressWay === 100) {\n            const timer = setInterval(() => {\n                setProgressFinal((prevProgress) => (prevProgress >= 100 ? 100 : prevProgress + 1));\n            }, 800);\n            return () => {\n                clearInterval(timer);\n            };\n        }\n    }, [progressWay]);\n\n    return(\n        <div className=\"MainPage\">\n            <FlatList\n                list={Drivers}\n                displayGrid\n                minColumnWidth={'300px'}\n                rowGap={'10px'}\n                gridGap={'40px'}\n                renderItem={(item) => (\n                    <div className={'Render'} style={{backgroundColor: '#ffffff'}}>\n                        <Card\n                            style={{\n                                width: 300,\n                                backgroundColor: item.color,\n                            }}\n                            actions={\n                            [<Box className={'Row'} sx={{ width: 240, flex: 1 }}>\n                                <LinearProgress\n                                    value={progressArr}\n                                    style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: 70, marginRight: 10}}\n                                    variant={\"determinate\"}\n                                    color=\"success\"\n                                />\n                                <LinearProgress\n                                    value={progressLoad}\n                                    style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: 70, marginRight: 10}}\n                                    variant={'determinate'}\n                                    color=\"success\"\n                                />\n                                <LinearProgress\n                                    value={progressWay}\n                                    style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: 70, marginRight: 10}}\n                                    variant={'determinate'}\n                                    color=\"success\"\n                                />\n                                <LinearProgress\n                                    value={progressFinal}\n                                    style={{backgroundColor: '#f8f8f8', borderRadius: 100, width: 70}}\n                                    variant={'determinate'}\n                                    color=\"success\"\n                                />\n                            </Box>]}\n                        >\n                            <Meta\n                                title={item.name}\n                                description={<FlatList\n                                    list={Tasks}\n                                    displayGrid\n                                    renderItem={(item) => (\n                                    <div className={'Task'}>\n                                        <text>wvwr</text>\n                                    </div>\n                                )\n                                }\n                                />}\n                            />\n                        </Card>\n                    </div>\n                )\n            }\n            />\n      </div>\n    );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}