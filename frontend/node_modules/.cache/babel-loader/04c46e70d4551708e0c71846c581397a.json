{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = __importStar(require(\"react\"));\nvar prop_types_1 = require(\"prop-types\");\nvar isType_1 = require(\"../___utils/isType\");\nvar DefaultLoadIndicator_1 = __importDefault(require(\"./DefaultLoadIndicator\"));\nvar InfiniteLoader = /** @class */function (_super) {\n  __extends(InfiniteLoader, _super);\n  function InfiniteLoader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      prevItemsCount: _this.props.itemsCount,\n      loadIndicatorContainer: null,\n      loading: false,\n      scrollingContainer: null\n    };\n    _this.loaderContainerRef = (0, react_1.createRef)();\n    // track the last scroll position so when new dom elements are inserted to avoid scroll jump\n    _this.lastScrollTop = 0;\n    _this.mounted = false;\n    // keep track of the dom items in the list\n    _this.currentItemsCount = 0;\n    _this.getScrollingContainerChildrenCount = function () {\n      var scrollingContainer = _this.state.scrollingContainer;\n      if (scrollingContainer) {\n        return Math.max(0, scrollingContainer.children.length);\n      }\n      return 0;\n    };\n    _this.setupScrollingContainerEventsListener = function (removeEvent) {\n      if (removeEvent === void 0) {\n        removeEvent = false;\n      }\n      var scrollingContainer = _this.state.scrollingContainer;\n      if (scrollingContainer) {\n        [\"scroll\", \"mousewheel\", \"touchmove\"].forEach(function (event) {\n          scrollingContainer.removeEventListener(event, _this.checkIfLoadingIsNeeded, true);\n          if (!removeEvent) {\n            scrollingContainer.addEventListener(event, _this.checkIfLoadingIsNeeded, true);\n          }\n        });\n      }\n    };\n    // show or hide loading indicators based on scroll position\n    // calls the \"loadMore\" function when is needed\n    _this.checkIfLoadingIsNeeded = function () {\n      if (!_this.mounted || !_this.props.hasMore || _this.state.loading) {\n        return;\n      }\n      var _a = _this.state,\n        scrollingContainer = _a.scrollingContainer,\n        loadIndicatorContainer = _a.loadIndicatorContainer;\n      if (scrollingContainer && loadIndicatorContainer) {\n        var scrollTop = scrollingContainer.scrollTop,\n          offsetTop = scrollingContainer.offsetTop,\n          offsetHeight = scrollingContainer.offsetHeight;\n        _this.lastScrollTop = scrollTop;\n        var loaderPosition = loadIndicatorContainer.offsetTop - scrollTop;\n        var startingPoint = offsetTop + offsetHeight;\n        if (loaderPosition <= startingPoint) {\n          _this.setState({\n            prevItemsCount: _this.props.itemsCount,\n            loading: true\n          }, function () {\n            _this.props.loadMore();\n          });\n        }\n      }\n    };\n    return _this;\n  }\n  InfiniteLoader.prototype.componentDidMount = function () {\n    var _this = this;\n    this.mounted = true;\n    var loadIndicatorContainer = this.loaderContainerRef.current;\n    if (loadIndicatorContainer) {\n      this.setState({\n        loadIndicatorContainer: loadIndicatorContainer,\n        scrollingContainer: loadIndicatorContainer.parentNode\n      }, function () {\n        _this.currentItemsCount = _this.getScrollingContainerChildrenCount();\n        _this.setupScrollingContainerEventsListener();\n      });\n    } else {\n      console.warn(\"FlatList: it was not possible to get container's ref. \" + \"Infinite scrolling pagination will not be possible\");\n    }\n  };\n  InfiniteLoader.prototype.componentDidUpdate = function (prevProps, prevState) {\n    // reset scroll position to where last was\n    if (this.state.scrollingContainer) {\n      this.state.scrollingContainer.scrollTop = this.lastScrollTop;\n    }\n    // reset loading state when the list size changes\n    if (prevProps.itemsCount !== this.props.itemsCount) {\n      this.reset();\n    }\n    this.checkIfLoadingIsNeeded();\n  };\n  InfiniteLoader.prototype.componentWillUnmount = function () {\n    this.setupScrollingContainerEventsListener(true);\n    this.mounted = false;\n  };\n  // update the loading flags and items count whether \"hasMore\" is false or list changed\n  InfiniteLoader.prototype.reset = function () {\n    this.setState({\n      loading: false\n    });\n  };\n  InfiniteLoader.prototype.render = function () {\n    var loading = this.state.loading;\n    var _a = this.props,\n      hasMore = _a.hasMore,\n      loadingIndicator = _a.loadingIndicator,\n      loadingIndicatorPosition = _a.loadingIndicatorPosition;\n    var spinning = hasMore && loading;\n    // do not remove the element from the dom so the ref is not broken but set it invisible enough\n    var styles = {\n      display: \"flex\",\n      height: spinning ? \"auto\" : 0,\n      justifyContent: loadingIndicatorPosition === \"center\" ? loadingIndicatorPosition : loadingIndicatorPosition === \"right\" ? \"flex-end\" : \"flex-start\",\n      padding: spinning ? \"5px 0\" : 0,\n      visibility: spinning ? \"visible\" : \"hidden\"\n    };\n    var loadingEl = (0, isType_1.isFunction)(loadingIndicator) ? loadingIndicator() : loadingIndicator;\n    return react_1.default.createElement(\"div\", {\n      ref: this.loaderContainerRef,\n      className: \"__infinite-loader\",\n      style: styles\n    }, spinning && (loadingIndicator ? loadingEl : react_1.default.createElement(DefaultLoadIndicator_1.default, null)));\n  };\n  InfiniteLoader.propTypes = {\n    itemsCount: prop_types_1.number,\n    hasMore: prop_types_1.bool.isRequired,\n    loadMore: prop_types_1.func.isRequired,\n    loadingIndicator: (0, prop_types_1.oneOfType)([prop_types_1.func, prop_types_1.node, prop_types_1.element]),\n    loadingIndicatorPosition: (0, prop_types_1.oneOf)([\"left\", \"center\", \"right\", \"\"])\n  };\n  InfiniteLoader.defaultProps = {\n    loadingIndicatorPosition: \"left\",\n    loadingIndicator: DefaultLoadIndicator_1.default\n  };\n  return InfiniteLoader;\n}(react_1.Component);\nexports.default = InfiniteLoader;","map":{"version":3,"mappings":"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","names":["__extends","_this","prevItemsCount","props","itemsCount","loadIndicatorContainer","loading","scrollingContainer","state","Math","max","children","length","removeEvent","forEach","event","removeEventListener","checkIfLoadingIsNeeded","addEventListener","mounted","hasMore","offsetTop","offsetHeight","lastScrollTop","scrollTop","loaderPosition","startingPoint","setState","loadMore","InfiniteLoader","loaderContainerRef","parentNode","currentItemsCount","getScrollingContainerChildrenCount","setupScrollingContainerEventsListener","console","warn","prevProps","prevState","reset","loadingIndicator","loadingIndicatorPosition","spinning","styles","display","height","justifyContent","padding","visibility","loadingEl","react_1","ref","className","style","DefaultLoadIndicator_1","prop_types_1","isRequired","exports"],"sources":["../../src/___subComponents/InfiniteLoader.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}